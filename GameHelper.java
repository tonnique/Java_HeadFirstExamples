import java.util.ArrayList;
import java.util.Scanner;

public class GameHelper {
	private static Scanner scanner = new Scanner(System.in);
	
	private static final String alphabet = "abcdefg";
	private static int gridLength = 7;
	private static int gridSize = 49;
	private static int[] grid = new int[gridSize];
	private static int comCount = 0;
	
	
	public static String getUserInput(String promt) {
		String inputLine = null;
		System.out.print(promt + "  ");
		inputLine = scanner.nextLine();
		if (inputLine.length() == 0) return null;
		else return inputLine;
	}
	
	public static ArrayList<String> placeDotCom(int comSize)
	{
		ArrayList<String> alphaCells = new ArrayList<String>();
		String[] alphacoords = new String[comSize];	// хранит координаты типа f6
		String temp = null; // Временная строка для конкатенации
		int[] coords = new int[comSize]; // Координаты текущего сайта
		int attempts = 0; // счетчик текущих попыток
		boolean success = false; // нашли подходящее местоположение
		int location = 0; // текущее начальное местоположение
		
		comCount++; // энный сайт для размещения
		int incr = 1;  // устанавливаем горизонтальный инкремент
	
		if ((comCount % 2) == 1) { // если нечетный (размещаем вертикально)
			incr = gridLength;	// устанавливаем вертикальный инкремент
		}
		
		while (!success & attempts++ < 200 ) { // главный поисковый цикл			
			location = (int) (Math.random() * gridSize); // получаем случайную стартовую точку
			//System.out.println("пробуем " + location);
			int x = 0;  // энная позиция в сайте, которую нужно разместить
			success = true;  // предполагаем успешный исход
			
			while (success && x < comSize)  { // ищем соседнюю неиспользованную ячейку
			
				if (grid[location] == 0) {  // если еще не используется
					coords[x++] = location;  // сохраняем местоположение
					location += incr; // пробуем следующую соседнюю ячейку
					
					if (location >= gridSize) {
						success = false; // неудача
					}
					
					if (x > 0 && (location % gridLength == 0)) { // Вышли за рамки - правый край
						success = false;	// неудача
					}
					
				} else {
					// System.out.println("используется " + location);
					success = false;
				}					
			}
		}
		
		int x = 0; // переводим местоположение в символьные координаты
		int row = 0;
		int column = 0;			
		//System.out.println("\n");
			
		while (x < comSize) {
			grid[coords[x]] = 1;	// помечаем ячейки на главной сетке как "использованные"
			row = (int) (coords[x] / gridLength);  // получаем значение ряда
			column = coords[x] % gridLength; // получаем значение столбца
			temp = String.valueOf(alphabet.charAt(column)); // преобразуем его в строковый символ
			
			alphaCells.add(temp.concat(Integer.toString(row)));
			x++;
			
			//System.out.println("  coord " + x + " = " + alphaCells.get(x-1));				
		}		
		//System.out.println();
		return alphaCells;
	}		
}


